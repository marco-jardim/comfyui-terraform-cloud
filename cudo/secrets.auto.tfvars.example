## Secrets for the Cudo Compute Terraform stack

# Your Cudo Compute API key. Generate one in the Cudo web console.
cudo_api_key       = "your-api-key"

# The UUID of your Cudo project. Create a project in the console and copy its ID.
cudo_project_id    = "your-project-id"

# Data centre ID where the VM and disks should live. The new default stack
# targets Cudo's US West site in Carlsbad, California.
cudo_data_center_id = "us-carlsbad-1"

# Optional overrides

# CPU resources (vCPUs) and RAM. Defaults match the Ice Lake + A100 profile
# (24 vCPUs / 192 GiB), but you can adjust if the quota allows.
#cudo_vcpus      = 24
#cudo_memory_gib = 192

# Number of GPUs to attach. Leave at 1 to get a single NVIDIA A100 PCIe.
#cudo_gpu_count  = 1

# Whether the model and media disks can be resized after creation. When true the
# models disk is provisioned at 100 GiB and the media disk at 10 GiB; when false
# the sizes are doubled to 200 GiB and 50 GiB respectively.
#cudo_resizable_disks = true

# Override the machine type or base image if you have specific requirements.
# cudo_image_id should match one of Cudo's public images. The default in
# variables.tf is "ubuntu-2204-nvidia-550-docker-v20250303", which is Ubuntu 22.04
# preinstalled with NVIDIA v550 drivers and Docker. Override it only if your
# chosen datacentre mandates a different image.
#cudo_image_id     = "ubuntu-2204-nvidia-550-docker-v20250303"
#cudo_machine_type = "intel-ice-lake-a100-pci"

# Optional Hugging Face token for downloading gated models (e.g. SDXL) during
# bootstrap. Keep this file out of version control.
#huggingface_token = "hf_your-token"